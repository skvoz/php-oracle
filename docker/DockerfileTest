#FROM buildpack-deps:jessie
FROM ubuntu:18.04

ENV PHP_VERSION=5.3.29
#MAINTAINER Amin Mkh <mukh_amin@yahoo.com>
#
## installing required stuff
RUN apt-get update \
    && apt-get install -y --force-yes curl vim lbzip2 git  autoconf2.13 wget build-essential libxml2-dev \
    libapr1-dev libaprutil1-dev zip

COPY conf/apache/httpd-2.4.41.tar.gz /opt/httpd-2.4.41.tar.gz


##</apache2>##
ENV OPEN_SSL_NAME="openssl-1.1.1d"

#copy openssl to container
COPY dist/$OPEN_SSL_NAME.tar.gz /opt/$OPEN_SSL_NAME.tar.gz


#install new openssl
RUN CFLAGS="-fPIC" && OPENSSL_VERSION=$OPEN_SSL_NAME \
      && cd /opt \
      && tar -xzf $OPEN_SSL_NAME.tar.gz \
      && cd /opt/$OPEN_SSL_NAME \
      && ./config shared && make && make install \
      && rm -rf /opt/$OPEN_SSL_NAME
#sertificates
COPY conf/keys/server.crt /usr/local/apache/conf/server.crt
COPY conf/keys/server.key /usr/local/apache/conf/server.key

#apache
RUN cd /opt \
      && tar -xzf httpd-2.4.41.tar.gz \
      && cd /opt/httpd-2.4.41 \
      && ./configure --prefix=/usr/local/apache  \
        --enable-so \
        --enable-shared=max \
      && make && make install \
      && rm -rf /opt/httpd-2.4.41.tar.gz

#php
RUN cd /opt \
    && curl --insecure -SL "http://php.net/get/php-$PHP_VERSION.tar.bz2/from/this/mirror" -o php.tar.bz2 \
	&& mkdir -p /usr/src/php \
	&& tar -xf php.tar.bz2 -C /usr/src/php --strip-components=1 \
	&& rm php.tar.bz2* \
	&& cd /usr/src/php \
	&& ./configure \
	#add libphp to apache
	    --with-apxs2=/usr/local/apache/bin/apxs \
	     --with-pdo-mysql=mysqlnd \
	     --with-mysqli=mysqlnd \
#	    --with-openssl=/usr/local/ssl \
	&& make \
	&& make install \
	&& rm -rf /opt/php-$PHP_VERSION.tar.bz2

#server configuration
COPY conf/apache/httpd-new.conf /usr/local/apache/conf/httpd.conf

#vhost configuration
COPY conf/apache/vhosts/default.conf /usr/local/apache/conf/extra/httpd-vhosts.conf
COPY conf/apache/vhosts/default-ssl.conf /usr/local/apache/conf/extra/httpd-ssl.conf

RUN export LD_LIBRARY_PATH="/usr/local/lib"

#oracle
RUN mkdir /opt/oracle \
    && cd /opt/oracle

ADD dist/oracle/instantclient-basic-linux.x64-11.2.0.4.0.zip /opt/oracle
ADD dist/oracle/instantclient-sdk-linux.x64-11.2.0.4.0.zip /opt/oracle
ADD dist/oracle/instantclient-sqlplus-linux.x64-11.2.0.4.0.zip /opt/oracle

# Install Oracle Instantclient
RUN  unzip /opt/oracle/instantclient-basic-linux.x64-11.2.0.4.0.zip -d /opt/oracle \
    && unzip /opt/oracle/instantclient-sqlplus-linux.x64-11.2.0.4.0.zip -d /opt/oracle \
    && unzip /opt/oracle/instantclient-sdk-linux.x64-11.2.0.4.0.zip -d /opt/oracle

RUN cd /opt/oracle/instantclient_11_2 && ls -la
RUN \
    ln -s /opt/oracle/instantclient_11_2/libclntsh.so.11.1 /opt/oracle/instantclient_11_2/libclntsh.so \
    && ln -s /opt/oracle/instantclient_11_2/libocijdbc.so.11.1 /opt/oracle/instantclient_11_2/libocijdbc.so \
    && ln -s /opt/oracle/instantclient_11_2/libocci.so.11.1 /opt/oracle/instantclient_11_2/libocci.so \
    && rm -rf /opt/oracle/*.zip

ENV LD_LIBRARY_PATH  /opt/oracle/instantclient_11_2:${LD_LIBRARY_PATH}

#RUN pecl config-set php_ini /etc/php5/apache2/php.ini
RUN mkdir /usr/local/etc/php/
RUN mkdir /usr/local/etc/php/conf.d
RUN touch /usr/local/etc/php/conf.d/docker-php-ext-oci8.ini

RUN echo 'instantclient,/opt/oracle/instantclient_11_2' | pecl install oci8-2.0.12 \
      && docker-php-ext-enable \
               oci8 \
       && docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/opt/oracle/instantclient_11_2,11.2 \
       && docker-php-ext-install \
               pdo_oci
#

#RUN /usr/local/apache/bin/apachectl start
#CMD ["/usr/local/apache/bin/apachectl", "restart"]


#CMD ["true"]