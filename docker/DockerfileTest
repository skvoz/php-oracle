#FROM buildpack-deps:jessie
#netstat -anp | grep apache
FROM ubuntu:16.04

ENV PHP_AUTOCONF=/usr/bin/autoconf2.13
ENV PHP_AUTOHEADER=/usr/bin/autoheader2.13
ENV PHP_VERSION=5.3.29

#ENV OPEN_SSL_NAME="openssl-1.1.1d"
ENV OPEN_SSL_NAME="openssl-1.0.1f"

RUN echo "/usr/local/openssl/lib" >> /etc/ld.so.conf.d/local.conf

#MAINTAINER Amin Mkh <mukh_amin@yahoo.com>
#
## installing required stuff
RUN apt-get update \
    && apt-get install -y --force-yes libaio-dev curl vim lbzip2 git  autoconf2.13 wget build-essential libxml2-dev \
    libapr1-dev libaprutil1-dev zip libmcrypt-dev net-tools \
    libcurl4-openssl-dev \
    libapr1 libapr1-dev

COPY docker/conf/apache/httpd-2.4.41.tar.gz /opt/httpd-2.4.41.tar.gz


#sertificates
COPY docker/conf/keys/server.crt /usr/local/apache/conf/server.crt
COPY docker/conf/keys/server.key /usr/local/apache/conf/server.key



#apr for apache
ENV APR="apr-1.7.0"
COPY docker/dist/$APR.tar.gz /opt/$APR.tar.gz

#install new openssl
#RUN CFLAGS="-fPIC" && OPENSSL_VERSION=$OPEN_SSL_NAME \
#./srclib/apr and ./srclib/apr-util

RUN mkdir ./srclib
RUN mkdir ./srclib/apr
RUN mkdir ./srclib/apr-util

RUN cd /opt \
      && tar -xzf $APR.tar.gz -C ./srclib/apr/ \
      && cd ./srclib/apr/ && ls -la \
      && cp -Rf ./srclib/apr/ ./srclib/apr-util/ \
      && rm -rf /opt/$APR.tar.gz


#apache
ENV LDFLAGS=-L/usr/local/ssl/lib
RUN cd /opt \
      && tar -xzf httpd-2.4.41.tar.gz \
      && cd /opt/httpd-2.4.41 \
      && ./configure --with-included-apr \
        --prefix=/usr/local/apache  \
        --enable-so \
        --enable-rewrite \
        --with-ssl=/usr/local/ssl \
        --enable-ssl=shared  \
        --enable-deflate \
        --enable-expires \
        --enable-headers \
#        --enable-shared=max \
#        --with-pcre=/usr/local/pcre
      && make && make install \
      && rm -rf /opt/httpd-2.4.41.tar.gz \
      && make clean


#copy openssl to container
COPY docker/dist/$OPEN_SSL_NAME.tar.gz /opt/$OPEN_SSL_NAME.tar.gz

#install new openssl
#RUN CFLAGS="-fPIC" && OPENSSL_VERSION=$OPEN_SSL_NAME \
RUN OPENSSL_VERSION=$OPEN_SSL_NAME \
      && cd /opt \
      && tar -xzf $OPEN_SSL_NAME.tar.gz \
      && cd /opt/$OPEN_SSL_NAME \
      && ./config --prefix=/usr --openssldir=/usr/local/openssl shared && make && make install_sw \
      && rm -rf /opt/$OPEN_SSL_NAME.tar.gz


RUN export LD_LIBRARY_PATH="/usr/local/lib"

#oracle
RUN mkdir /opt/oracle \
    && cd /opt/oracle
##
ADD docker/dist/oracle/11.2/instantclient-basic-linux.x64-11.2.0.4.0.zip /opt/oracle
ADD docker/dist/oracle/11.2/instantclient-sdk-linux.x64-11.2.0.4.0.zip /opt/oracle
ADD docker/dist/oracle/11.2/instantclient-sqlplus-linux.x64-11.2.0.4.0.zip /opt/oracle


# Install Oracle Instantclient
RUN  unzip /opt/oracle/instantclient-basic-linux.x64-11.2.0.4.0.zip -d /opt/oracle \
    && unzip /opt/oracle/instantclient-sqlplus-linux.x64-11.2.0.4.0.zip -d /opt/oracle \
    && unzip /opt/oracle/instantclient-sdk-linux.x64-11.2.0.4.0.zip -d /opt/oracle

RUN \
    ln -s /opt/oracle/instantclient_11_2/libclntsh.so.11.1 /opt/oracle/instantclient_11_2/libclntsh.so \
    && ln -s /opt/oracle/instantclient_11_2/libocijdbc.so.11.1 /opt/oracle/instantclient_11_2/libocijdbc.so \
    && ln -s /opt/oracle/instantclient_11_2/libocci.so.11.1 /opt/oracle/instantclient_11_2/libocci.so \
    && rm -rf /opt/oracle/*.zip



#php

ENV PHP_INI_DIR /usr/local/lib
RUN mkdir -p $PHP_INI_DIR/conf.d
#
COPY docker/conf/php/docker-php-ext-* /usr/local/bin/

#ENV ORACLE_HOME=/opt/oracle/instantclient_11_2

RUN cd /opt \
    && curl --insecure -SL "http://php.net/get/php-$PHP_VERSION.tar.bz2/from/this/mirror" -o php.tar.bz2 \
	&& mkdir -p /usr/src/php \
	&& tar -xf php.tar.bz2 -C /usr/src/php --strip-components=1 \
	&& rm php.tar.bz2* \
	&& cd /usr/src/php \
	&& ./configure \
	#add libphp to apache
	     --with-apxs2=/usr/local/apache/bin/apxs \
	     --with-config-file-path="$PHP_INI_DIR" \
         --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
	     --with-pdo-mysql=mysqlnd \
#	     --with-pdo-oci=shared,instantclient,/opt/oracle/instantclient_11_2,11.2 \
	     --with-oci8=shared,instantclient,/opt/oracle/instantclient_11_2,11.2 \
	     --with-mysqli=mysqlnd \
	     --with-mbstring \
	     --with-mcrypt \
	     --enable-so \
         --enable-shared=max \
	     --enable-cli \
	     --enable-ssl \
	     --with-openssl=shared \
	     --with-openssl-dir=/usr/local/ssl \
	&& make \
	&& make install \
	&& rm -rf /opt/php-$PHP_VERSION.tar.bz2

RUN cd /opt/oracle/instantclient_11_2 && ls -la

RUN cp /usr/src/php/php.ini-development $PHP_INI_DIR/php.ini
#server configuration
COPY docker/conf/apache/httpd-new.conf /usr/local/apache/conf/httpd.conf

#vhost configuration
COPY docker/conf/apache/vhosts/default.conf /usr/local/apache/conf/extra/httpd-vhosts.conf
COPY docker/conf/apache/vhosts/default-ssl.conf /usr/local/apache/conf/extra/httpd-ssl.conf

#RUN chmod -R u+x /usr/local/bin
#RUN PATH=$PATH:~/usr/local/bin

#oci
#COPY dist/oci8-2.0.12.tgz /opt/oci8-2.0.12.tgz
#ENV ORACLE_HOME=/opt/oracle/client/11.2.0
##ENV LD_LIBRARY_PATH  /opt/oracle/instantclient_11_2:${LD_LIBRARY_PATH}
#
#RUN pecl install oci8-2.0.12
#
##ENV ORACLE_HOME=/u01/app/oracle/product/11.2.0
#RUN cd /opt \
#      && tar -xzf oci8-2.0.12.tgz \
#      && ls -la \
#      && cd oci8-2.0.12 \
#      && whereis autoconf \
#      &&  whereis autoheader \
#      && phpize \
#      &&  ./configure --with-oci8=instantclient,/opt/oracle/instantclient_11_2,11.2,$ORACLE_HOME \
#      && make && make install \
#      && rm -rf /opt/oci8-2.0.12.tgz

#RUN cd /opt/oracle/instantclient_11_2 \
#    && ./configure \
#    --with-pdo-oci=instantclient,/opt/oracle/instantclient_11_2,11.2 \
#    --with-oci8=shared, $ORACLE_HOME \
#    && make \
#    && make install

#ENV LD_LIBRARY_PATH  /opt/oracle/instantclient_11_2:${LD_LIBRARY_PATH}
#
#RUN pecl config-set php_ini /usr/local/lib/php.ini
#
RUN echo "extension=oci8.so" >> /usr/local/lib/php.ini
#
#RUN mkdir /usr/local/etc/php/
#RUN mkdir /usr/local/etc/php/conf.d
#RUN touch /usr/local/etc/php/conf.d/docker-php-ext-oci8.ini
#
#RUN pecl install oci8-2.0.12
#RUN php -m
#RUN cd /usr/local/bin && echo 'instantclient,/opt/oracle/instantclient_11_2' | pecl install oci8-2.0.12 \
#      && docker-php-ext-enable \
#               oci8 \
#       && docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/opt/oracle/instantclient_11_2,11.2 \
#       && docker-php-ext-install \
#               pdo_oci
#

COPY docker/conf/apache/httpd-foreground /usr/local/bin/httpd-foreground

CMD ["/usr/local/apache/bin/apachectl", "-DFOREGROUND"]

#CMD ["httpd-foreground"]


