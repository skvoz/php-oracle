#FROM buildpack-deps:jessie
#netstat -anp | grep apache
FROM ubuntu:12.04

#env part
ENV PHP_VERSION=5.3.29
ENV HTTPD_NAME="httpd-2.4.7"
ENV OPEN_SSL_NAME="openssl-1.0.1f"
ENV APR="apr-1.5.0"
ENV APR_UTIL="apr-util-1.5.3"
ENV ZLIB="zlib-1.2.8"
ENV PCRE="pcre-8.32"
#
##lib part
RUN apt-get update \
    && apt-get install -y --force-yes  gcc build-essential curl autoconf2.13  libxml2-dev \
    libaio-dev curl vim lbzip2 git wget zip libmcrypt-dev net-tools
#    libaio-dev curl vim lbzip2 git  autoconf2.13 wget build-essential \
#    zip libmcrypt-dev net-tools


#copy dist
COPY docker/dist/$HTTPD_NAME.tar.gz /opt/$HTTPD_NAME.tar.gz
COPY docker/dist/$OPEN_SSL_NAME.tar.gz /opt/$OPEN_SSL_NAME.tar.gz
COPY docker/dist/$APR.tar.gz /opt/$APR.tar.gz
COPY docker/dist/$APR_UTIL.tar.gz /opt/$APR_UTIL.tar.gz
COPY docker/dist/$ZLIB.tar.gz /opt/$ZLIB.tar.gz
COPY docker/dist/$PCRE.tar.gz /opt/$PCRE.tar.gz

#TODO change copy
#unzip dist
RUN cd /opt \
 && tar -xzf $HTTPD_NAME.tar.gz  \
 && tar -xzf $OPEN_SSL_NAME.tar.gz && cp -r $OPEN_SSL_NAME/. $HTTPD_NAME/srclib/openssl  \
 && tar -xzf $APR.tar.gz && cp -r $APR/. $HTTPD_NAME/srclib/apr \
 && tar -xzf $APR_UTIL.tar.gz && cp -r $APR_UTIL/. $HTTPD_NAME/srclib/apr-util \
 && tar -xzf $PCRE.tar.gz && cp -r $PCRE/. $HTTPD_NAME/srclib/pcre \
 && tar -xzf $ZLIB.tar.gz && cp -r $ZLIB/. $HTTPD_NAME/srclib/zlib

#need compile lib part
RUN cd /opt/$HTTPD_NAME/srclib \
    && cd pcre && ls -la &&./configure --prefix=/usr/local/pcre && make && make install

RUN cd /opt/$HTTPD_NAME/srclib \
    &&  cd zlib && ./configure --prefix=/usr/local/zlib && make && make install

RUN cd /opt/$HTTPD_NAME/srclib \
    && cd openssl && ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl \
        --with-zlib-include=/opt/$HTTPD_NAME/srclib/zlib shared zlib-dynamic && make && make install

RUN cd /opt/$HTTPD_NAME \
    ./buildconf --force && \
    ./configure --prefix=/usr/local/apache --enable-pie --enable-mods-shared=all --enable-so --disable-include \
        --enable-deflate --enable-headers --enable-expires --enable-ssl=shared --enable-mpms-shared=all \
        --with-mpm=worker --enable-rewrite --with-z=/usr/local/zlib --with-pcre=/usr/local/pcre --with-ssl=/usr/local/openssl \
        --enable-module=ssl --with-included-apr && make && make install
    
#RUN cd /usr/local/apache && ls -la
#RUN cd /usr/local/bin && ls -la

#copy configuration

COPY docker/conf/keys/server.crt /usr/local/apache/conf/server.crt
COPY docker/conf/keys/server.key /usr/local/apache/conf/server.key

#RUN mv /usr/local/apache/conf/httpd.conf /usr/local/apache/conf/httpd.conf.old
#COPY docker/conf/apache/httpd-new.conf /usr/local/apache/conf/httpd.conf

#vhost configuration
COPY docker/conf/apache/vhosts/default.conf /usr/local/apache/conf/extra/httpd-vhosts.conf
COPY docker/conf/apache/vhosts/default-ssl.conf /usr/local/apache/conf/extra/httpd-ssl.conf




RUN cd /opt \
    && curl --insecure -SL "http://php.net/get/php-$PHP_VERSION.tar.bz2/from/this/mirror" -o php.tar.bz2 \
	&& mkdir -p /usr/src/php \
	&& tar -xf php.tar.bz2 -C /usr/src/php --strip-components=1 \
	&& rm php.tar.bz2* \
	&& cd /usr/src/php \
    && ./buildconf --force \
	&& ./configure \
	#add libphp to apache
	     --with-apxs2=/usr/local/apache/bin/apxs \
	     --with-config-file-path="$PHP_INI_DIR" \
         --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
	     --with-pdo-mysql=mysqlnd \
#	     --with-pdo-oci=shared,instantclient,/opt/oracle/instantclient_11_2,11.2 \
#	     --with-oci8=shared,instantclient,/opt/oracle/instantclient_11_2,11.2 \
	     --with-mysqli=mysqlnd \
	     --enable-cli \
	     --enable-openssl \
	    --with-openssl \
	    --with-openssl-dir=/usr/local/openssl \
	       && make -j"$(nproc)" \
	&& make \
	&& make install \
	&& rm -rf /opt/php-$PHP_VERSION.tar.bz2

#entypoint
COPY docker/conf/apache/httpd-foreground /usr/local/bin/httpd-foreground


RUN cd /usr/local/bin && ls -la
RUN php -m
RUN cd /usr/local/apache/modules && ls -la
CMD ["/usr/local/apache/bin/apachectl", "-DFOREGROUND"]

CMD ["httpd-foreground"]

#
#
##MAINTAINER Amin Mkh <mukh_amin@yahoo.com>
##
### installing required stuff
#
#
#COPY docker/conf/apache/$HTTPD_NAME.tar.gz /opt/$HTTPD_NAME.tar.gz
#
#COPY docker/conf/apache/$HTTPD_DEPS_NAME.tar.gz /opt/$HTTPD_DEPS_NAME.tar.gz
###</apache2>##
#
#
##copy openssl to container
#COPY docker/dist/$OPEN_SSL_NAME.tar.gz /opt/$OPEN_SSL_NAME.tar.gz
#
#
##sertificates
#COPY docker/conf/keys/server.crt /usr/local/apache/conf/server.crt
#COPY docker/conf/keys/server.key /usr/local/apache/conf/server.key
#
##install debs httpd
#
#RUN cd /opt \
#      && tar -xzf $HTTPD_DEPS_NAME.tar.gz  \
#      && cd /opt/$HTTPD_NAME/ && cp -r srclib /usr/local/apache \
#      && cd /usr/local/apache/srclib/apr \
#      && ./configure --with-crypto &&  make && make install \
#      && cd /usr/local/apache/srclib/apr-util \
#      && ./configure --with-crypto --with-apr=/usr/local/apr && make && make install \
#
#      && rm -rf /opt/$HTTPD_DEPS_NAME.tar.gz
#
#
##install new openssl
#RUN CFLAGS="-fPIC" && OPENSSL_VERSION=$OPEN_SSL_NAME \
#      && cd /opt \
#      && tar -xzf $OPEN_SSL_NAME.tar.gz \
#      && cd /opt/$OPEN_SSL_NAME \
#      && ./config shared \
##        --with-openssl=/usr/local/ssl \
#        --openssldir=/usr/local/openssl \
#      && make && make install \
#      && rm -rf /opt/$OPEN_SSL_NAME.tar.gz
#
##apache
#
#RUN cd /opt \
#      && tar -xzf $HTTPD_NAME.tar.gz \
#      && cd /opt/$HTTPD_NAME \
#
#      && ./configure --prefix=/usr/local/apache  \
##        --help \
#        --enable-so \
#        --enable-shared \
##	    --with-openssl=/usr/local/openssl/bin \
##	    --with-openssl-dir=/usr/local/ssl \
#        --with-crypto \
#        --enable-so \
#        --enable-ssl --enable-rewrite --with-apr=/usr/local/apr \
##        --enable-mods-shared='rewrite ssl' \
#      && make && make install \
#      && rm -rf /opt/$HTTPD_NAME.tar.gz
#
#
#
#RUN export LD_LIBRARY_PATH="/usr/local/lib"
##
###oracle
##RUN mkdir /opt/oracle \
##    && cd /opt/oracle
####
##ADD docker/dist/oracle/11.2/instantclient-basic-linux.x64-11.2.0.4.0.zip /opt/oracle
##ADD docker/dist/oracle/11.2/instantclient-sdk-linux.x64-11.2.0.4.0.zip /opt/oracle
##ADD docker/dist/oracle/11.2/instantclient-sqlplus-linux.x64-11.2.0.4.0.zip /opt/oracle
##
##
### Install Oracle Instantclient
##RUN  unzip /opt/oracle/instantclient-basic-linux.x64-11.2.0.4.0.zip -d /opt/oracle \
##    && unzip /opt/oracle/instantclient-sqlplus-linux.x64-11.2.0.4.0.zip -d /opt/oracle \
##    && unzip /opt/oracle/instantclient-sdk-linux.x64-11.2.0.4.0.zip -d /opt/oracle
##
##RUN \
##    ln -s /opt/oracle/instantclient_11_2/libclntsh.so.11.1 /opt/oracle/instantclient_11_2/libclntsh.so \
##    && ln -s /opt/oracle/instantclient_11_2/libocijdbc.so.11.1 /opt/oracle/instantclient_11_2/libocijdbc.so \
##    && ln -s /opt/oracle/instantclient_11_2/libocci.so.11.1 /opt/oracle/instantclient_11_2/libocci.so \
##    && rm -rf /opt/oracle/*.zip
#
#
#
##php
#
#ENV PHP_INI_DIR /usr/local/lib
#RUN mkdir -p $PHP_INI_DIR/conf.d
##
#COPY docker/conf/php/docker-php-ext-* /usr/local/bin/
#
##ENV ORACLE_HOME=/opt/oracle/instantclient_11_2
#
#RUN export CFLAGS="-I/usr/local/ssl/include"
#RUN export LDFLAGS="/usr/local/ssl/lib"
#
#RUN cd /opt \
#    && curl --insecure -SL "http://php.net/get/php-$PHP_VERSION.tar.bz2/from/this/mirror" -o php.tar.bz2 \
#	&& mkdir -p /usr/src/php \
#	&& tar -xf php.tar.bz2 -C /usr/src/php --strip-components=1 \
#	&& rm php.tar.bz2* \
#	&& cd /usr/src/php \
#    && ./buildconf --force \
#	&& ./configure \
#	#add libphp to apache
#	     --with-apxs2=/usr/local/apache/bin/apxs \
#	     --with-config-file-path="$PHP_INI_DIR" \
#         --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
#	     --with-pdo-mysql=mysqlnd \
##	     --with-pdo-oci=shared,instantclient,/opt/oracle/instantclient_11_2,11.2 \
##	     --with-oci8=shared,instantclient,/opt/oracle/instantclient_11_2,11.2 \
#	     --with-mysqli=mysqlnd \
#	     --enable-cli \
#	     --enable-openssl \
#	    --with-openssl \
#	    --with-openssl-dir=/usr/local/openssl \
#	       && make -j"$(nproc)" \
#	&& make \
#	&& make install \
#	&& rm -rf /opt/php-$PHP_VERSION.tar.bz2
##
##RUN cd /opt/oracle/instantclient_11_2 && ls -la
#
#RUN cp /usr/src/php/php.ini-development $PHP_INI_DIR/php.ini
##server configuration
##RUN mv /usr/local/apache/conf/httpd.conf /usr/local/apache/conf/httpd.conf.old
##COPY docker/conf/apache/httpd-new.conf /usr/local/apache/conf/httpd.conf
#
##vhost configuration
#COPY docker/conf/apache/vhosts/default.conf /usr/local/apache/conf/extra/httpd-vhosts.conf
#COPY docker/conf/apache/vhosts/default-ssl.conf /usr/local/apache/conf/extra/httpd-ssl.conf
#
##RUN chmod -R u+x /usr/local/bin
##RUN PATH=$PATH:~/usr/local/bin
#
##oci
##COPY dist/oci8-2.0.12.tgz /opt/oci8-2.0.12.tgz
##ENV ORACLE_HOME=/opt/oracle/client/11.2.0
###ENV LD_LIBRARY_PATH  /opt/oracle/instantclient_11_2:${LD_LIBRARY_PATH}
##
##RUN pecl install oci8-2.0.12
##
###ENV ORACLE_HOME=/u01/app/oracle/product/11.2.0
##RUN cd /opt \
##      && tar -xzf oci8-2.0.12.tgz \
##      && ls -la \
##      && cd oci8-2.0.12 \
##      && whereis autoconf \
##      &&  whereis autoheader \
##      && phpize \
##      &&  ./configure --with-oci8=instantclient,/opt/oracle/instantclient_11_2,11.2,$ORACLE_HOME \
##      && make && make install \
##      && rm -rf /opt/oci8-2.0.12.tgz
#
##RUN cd /opt/oracle/instantclient_11_2 \
##    && ./configure \
##    --with-pdo-oci=instantclient,/opt/oracle/instantclient_11_2,11.2 \
##    --with-oci8=shared, $ORACLE_HOME \
##    && make \
##    && make install
#
##ENV LD_LIBRARY_PATH  /opt/oracle/instantclient_11_2:${LD_LIBRARY_PATH}
##
##RUN pecl config-set php_ini /usr/local/lib/php.ini
##
#RUN echo "extension=oci8.so" >> /usr/local/lib/php.ini
##
##RUN mkdir /usr/local/etc/php/
##RUN mkdir /usr/local/etc/php/conf.d
##RUN touch /usr/local/etc/php/conf.d/docker-php-ext-oci8.ini
##
##RUN pecl install oci8-2.0.12
##RUN php -m
##RUN cd /usr/local/bin && echo 'instantclient,/opt/oracle/instantclient_11_2' | pecl install oci8-2.0.12 \
##      && docker-php-ext-enable \
##               oci8 \
##       && docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/opt/oracle/instantclient_11_2,11.2 \
##       && docker-php-ext-install \
##               pdo_oci
##
#
#COPY docker/conf/apache/httpd-foreground /usr/local/bin/httpd-foreground
#
#
#RUN cd /usr/local/bin && ls -la
#RUN php -m
#RUN cd /usr/local/apache/modules && ls -la
#CMD ["/usr/local/apache/bin/apachectl", "-DFOREGROUND"]

#CMD ["httpd-foreground"]


